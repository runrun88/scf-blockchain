/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.44.v20210927
 * Generated at: 2025-03-19 08:49:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.supplychainfinance.model.Contract;
import java.util.List;

public final class contract_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.supplychainfinance.model.Contract");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("        \n");
      out.write("            <!DOCTYPE html>\n");
      out.write("            <html lang=\"en\">\n");
      out.write("            <!-- Rest of your contract.jsp file -->\n");
      out.write("            <!DOCTYPE html>\n");
      out.write("            <html lang=\"en\">\n");
      out.write("\n");
      out.write("            <head>\n");
      out.write("                <meta charset=\"UTF-8\">\n");
      out.write("                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("                <title>Contract Search - Supply Chain Finance</title>\n");
      out.write("                <!-- Bootstrap CSS for responsive layout and styling -->\n");
      out.write("                <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("                <style>\n");
      out.write("                    /* Custom styles */\n");
      out.write("                    body {\n");
      out.write("                        font-family: Arial, sans-serif;\n");
      out.write("                        background-color: #f4f7fa;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .container {\n");
      out.write("                        margin-top: 30px;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .card {\n");
      out.write("                        margin: 20px 0;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .menu {\n");
      out.write("                        margin-bottom: 30px;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .menu a {\n");
      out.write("                        color: #fff;\n");
      out.write("                        font-size: 18px;\n");
      out.write("                        margin: 0 15px;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .menu a:hover {\n");
      out.write("                        text-decoration: underline;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .header {\n");
      out.write("                        background-color: #007bff;\n");
      out.write("                        padding: 15px;\n");
      out.write("                        color: white;\n");
      out.write("                        text-align: center;\n");
      out.write("                        font-size: 24px;\n");
      out.write("                        border-radius: 10px;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .footer {\n");
      out.write("                        text-align: center;\n");
      out.write("                        margin-top: 50px;\n");
      out.write("                        font-size: 14px;\n");
      out.write("                        color: #aaa;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .search-form {\n");
      out.write("                        background-color: #ffffff;\n");
      out.write("                        padding: 20px;\n");
      out.write("                        border-radius: 10px;\n");
      out.write("                        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n");
      out.write("                        margin-bottom: 30px;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .results-table {\n");
      out.write("                        background-color: #ffffff;\n");
      out.write("                        border-radius: 10px;\n");
      out.write("                        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n");
      out.write("                        padding: 20px;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .results-table table tbody tr {\n");
      out.write("                        cursor: pointer;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .results-table table tbody tr:hover {\n");
      out.write("                        background-color: #0056b3;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    #loading {\n");
      out.write("                        display: none;\n");
      out.write("                        text-align: center;\n");
      out.write("                        padding: 20px;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    /* Updated dropdown menu styling */\n");
      out.write("                    .dropdown-menu {\n");
      out.write("                        background-color: #f8f9fa;\n");
      out.write("                        border-radius: 5px;\n");
      out.write("                        margin-top: 10px;\n");
      out.write("                        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);\n");
      out.write("                        z-index: 1021;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .dropdown-item {\n");
      out.write("                        color: #333333 !important;\n");
      out.write("                        font-weight: 500;\n");
      out.write("                        padding: 0.5rem 1.5rem;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .dropdown-item:hover {\n");
      out.write("                        background-color: #007bff;\n");
      out.write("                        color: white !important;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    /* Make the dropdown visible */\n");
      out.write("                    .dropdown-toggle {\n");
      out.write("                        cursor: pointer;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    .dropdown-toggle::after {\n");
      out.write("                        display: inline-block;\n");
      out.write("                        margin-left: 0.255em;\n");
      out.write("                        vertical-align: 0.255em;\n");
      out.write("                        content: \"\";\n");
      out.write("                        border-top: 0.3em solid;\n");
      out.write("                        border-right: 0.3em solid transparent;\n");
      out.write("                        border-bottom: 0;\n");
      out.write("                        border-left: 0.3em solid transparent;\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    /* Fix inline display */\n");
      out.write("                    .dropdown.d-inline-block {\n");
      out.write("                        vertical-align: middle;\n");
      out.write("                    }\n");
      out.write("                </style>\n");
      out.write("            </head>\n");
      out.write("\n");
      out.write("            <body>\n");
      out.write("\n");
      out.write("                <!-- Header and Navigation Menu -->\n");
      out.write("                <div class=\"header\">\n");
      out.write("                    <h1>Supply Chain Finance Platform</h1>\n");
      out.write("                    <div class=\"menu\">\n");
      out.write("                        <a href=\"index.jsp\">Home</a>\n");
      out.write("                        <a href=\"#user-management\">User</a>\n");
      out.write("\n");
      out.write("                        <!-- Enterprise dropdown menu -->\n");
      out.write("                        <div class=\"dropdown d-inline-block\">\n");
      out.write("                            <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"enterpriseDropdown\"\n");
      out.write("                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("                                Enterprise\n");
      out.write("                            </a>\n");
      out.write("                            <div class=\"dropdown-menu\" aria-labelledby=\"enterpriseDropdown\">\n");
      out.write("                                <a class=\"dropdown-item\" href=\"enterprise.jsp\">Search Enterprises</a>\n");
      out.write("                                <a class=\"dropdown-item\" href=\"enterpriseDetail.jsp?mode=add\">Add New Enterprise</a>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <!-- Contract dropdown menu -->\n");
      out.write("                        <div class=\"dropdown d-inline-block\">\n");
      out.write("                            <a class=\"dropdown-toggle\" href=\"#\" role=\"button\" id=\"contractDropdown\"\n");
      out.write("                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n");
      out.write("                                Contract\n");
      out.write("                            </a>\n");
      out.write("                            <div class=\"dropdown-menu\" aria-labelledby=\"contractDropdown\">\n");
      out.write("                                <a class=\"dropdown-item\" href=\"contract.jsp\">Search Contracts</a>\n");
      out.write("                                <a class=\"dropdown-item\" href=\"contractDetail.jsp?mode=add\">Add New Contract</a>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("\n");
      out.write("                        <a href=\"invoice.jsp\">Invoice</a>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div class=\"container\">\n");
      out.write("                    <!-- Search Form Section -->\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-12\">\n");
      out.write("                            <div class=\"search-form\">\n");
      out.write("                                <h3 class=\"mb-4\">Contract Search</h3>\n");
      out.write("                                <form id=\"contractSearchForm\">\n");
      out.write("                                    <div class=\"form-row\">\n");
      out.write("                                        <div class=\"form-group col-md-6\">\n");
      out.write("                                            <label for=\"contractId\">Contract ID</label>\n");
      out.write("                                            <input type=\"text\" class=\"form-control\" id=\"contractId\"\n");
      out.write("                                                placeholder=\"Enter Contract ID\">\n");
      out.write("                                        </div>\n");
      out.write("                                        <div class=\"form-group col-md-6\">\n");
      out.write("                                            <label for=\"enterpriseName\">Enterprise Name</label>\n");
      out.write("                                            <input type=\"text\" class=\"form-control\" id=\"enterpriseName\"\n");
      out.write("                                                placeholder=\"Enter Enterprise Name\">\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"form-row\">\n");
      out.write("                                        <div class=\"form-group col-md-6\">\n");
      out.write("                                            <label for=\"contractStatus\">Contract Status</label>\n");
      out.write("                                            <select class=\"form-control\" id=\"contractStatus\">\n");
      out.write("                                                <option value=\"\">All Statuses</option>\n");
      out.write("                                                <option value=\"Draft\">Draft</option>\n");
      out.write("                                                <option value=\"Pending\">Pending</option>\n");
      out.write("                                                <option value=\"Active\">Active</option>\n");
      out.write("                                                <option value=\"Completed\">Completed</option>\n");
      out.write("                                                <option value=\"Cancelled\">Cancelled</option>\n");
      out.write("                                            </select>\n");
      out.write("                                        </div>\n");
      out.write("                                        <div class=\"form-group col-md-6\">\n");
      out.write("                                            <label for=\"contractType\">Contract Type</label>\n");
      out.write("                                            <select class=\"form-control\" id=\"contractType\">\n");
      out.write("                                                <option value=\"\">All Types</option>\n");
      out.write("                                                <option value=\"Purchase\">Purchase Contract</option>\n");
      out.write("                                                <option value=\"Sales\">Sales Contract</option>\n");
      out.write("                                                <option value=\"Service\">Service Contract</option>\n");
      out.write("                                            </select>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                    <div class=\"form-row\">\n");
      out.write("                                        <div class=\"col-md-6 mb-2\">\n");
      out.write("                                            <button type=\"button\" class=\"btn btn-primary btn-block\"\n");
      out.write("                                                onclick=\"searchContracts()\">Search</button>\n");
      out.write("                                        </div>\n");
      out.write("                                        <div class=\"col-md-3 mb-2\">\n");
      out.write("                                            <button type=\"button\" class=\"btn btn-secondary btn-block\"\n");
      out.write("                                                onclick=\"resetForm()\">Reset</button>\n");
      out.write("                                        </div>\n");
      out.write("                                        <div class=\"col-md-3 mb-2\">\n");
      out.write("                                            <button type=\"button\" class=\"btn btn-success btn-block\"\n");
      out.write("                                                onclick=\"addNewContract()\">Add New</button>\n");
      out.write("                                        </div>\n");
      out.write("                                    </div>\n");
      out.write("                                </form>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <!-- Results Table Section -->\n");
      out.write("                    <div class=\"row\">\n");
      out.write("                        <div class=\"col-12\">\n");
      out.write("                            <div class=\"results-table\">\n");
      out.write("                                <h3 class=\"mb-4\">Search Results</h3>\n");
      out.write("                                <div id=\"loading\">\n");
      out.write("                                    <div class=\"spinner-border text-primary\" role=\"status\">\n");
      out.write("                                        <span class=\"sr-only\">Loading...</span>\n");
      out.write("                                    </div>\n");
      out.write("                                    <p class=\"mt-2\">Loading contracts...</p>\n");
      out.write("                                </div>\n");
      out.write("                                <div class=\"table-responsive\">\n");
      out.write("                                    <!-- Update the table headers in contract.jsp -->\n");
      out.write("                                    <table class=\"table table-striped table-hover\">\n");
      out.write("                                        <thead>\n");
      out.write("                                            <tr>\n");
      out.write("                                                <th>Contract ID</th>\n");
      out.write("                                                <th>Real No</th>\n");
      out.write("                                                <th>Amount</th>\n");
      out.write("                                                <th>Signing Date</th>\n");
      out.write("                                                <th>Status</th>\n");
      out.write("                                            </tr>\n");
      out.write("                                        </thead>\n");
      out.write("                                        <tbody id=\"resultsBody\">\n");
      out.write("                                            <!-- Data will be populated dynamically -->\n");
      out.write("                                        </tbody>\n");
      out.write("                                    </table>\n");
      out.write("                                </div>\n");
      out.write("                                <div id=\"noResults\" style=\"display: none;\">\n");
      out.write("                                    <p class=\"text-center\">No contracts found matching your search criteria.</p>\n");
      out.write("                                </div>\n");
      out.write("                            </div>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Footer -->\n");
      out.write("                <div class=\"footer\">\n");
      out.write("                    <p>&copy; 2025 Supply Chain Finance Platform | All rights reserved.</p>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <!-- Bootstrap and jQuery JS -->\n");
      out.write("                <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\n");
      out.write("                <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js\"></script>\n");
      out.write("                <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("                <script>\n");
      out.write("                    // 导航到新建合同页面\n");
      out.write("                    function addNewContract() {\n");
      out.write("                        window.location.href = 'contractDetail.jsp?mode=add';\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    // 格式化日期为 DD/MM/YYYY 格式\n");
      out.write("                    function formatDateToDDMMYYYY(dateStr) {\n");
      out.write("                        console.log(\"Format date input:\", dateStr, \"type:\", typeof dateStr);\n");
      out.write("\n");
      out.write("                        // 如果是空值，直接返回空字符串\n");
      out.write("                        if (!dateStr) {\n");
      out.write("                            console.log(\"Empty date input\");\n");
      out.write("                            return '';\n");
      out.write("                        }\n");
      out.write("\n");
      out.write("                        try {\n");
      out.write("                            // 创建日期对象\n");
      out.write("                            let date;\n");
      out.write("\n");
      out.write("                            // 根据输入类型处理\n");
      out.write("                            if (typeof dateStr === 'object') {\n");
      out.write("                                // 如果已经是日期对象\n");
      out.write("                                date = dateStr;\n");
      out.write("                                console.log(\"Date is already an object\");\n");
      out.write("                            } else if (typeof dateStr === 'number') {\n");
      out.write("                                // 如果是时间戳\n");
      out.write("                                date = new Date(dateStr);\n");
      out.write("                                console.log(\"Date is a timestamp:\", dateStr);\n");
      out.write("                            } else if (typeof dateStr === 'string') {\n");
      out.write("                                // 处理各种字符串格式\n");
      out.write("                                console.log(\"Date is a string:\", dateStr);\n");
      out.write("\n");
      out.write("                                if (dateStr.includes('T')) {\n");
      out.write("                                    // ISO 格式: 2023-01-01T00:00:00.000Z\n");
      out.write("                                    date = new Date(dateStr);\n");
      out.write("                                    console.log(\"Parsed ISO format:\", date);\n");
      out.write("                                } else if (dateStr.includes('-')) {\n");
      out.write("                                    // YYYY-MM-DD 格式\n");
      out.write("                                    const parts = dateStr.split('-');\n");
      out.write("                                    if (parts.length === 3) {\n");
      out.write("                                        date = new Date(parseInt(parts[0]), parseInt(parts[1]) - 1, parseInt(parts[2]));\n");
      out.write("                                        console.log(\"Parsed YYYY-MM-DD format:\", date);\n");
      out.write("                                    } else {\n");
      out.write("                                        date = new Date(dateStr);\n");
      out.write("                                    }\n");
      out.write("                                } else if (dateStr.includes('/')) {\n");
      out.write("                                    // 可能是 DD/MM/YYYY 或 MM/DD/YYYY 格式\n");
      out.write("                                    const parts = dateStr.split('/');\n");
      out.write("                                    if (parts.length === 3) {\n");
      out.write("                                        if (parts[2].length === 4) {\n");
      out.write("                                            // 假设是 DD/MM/YYYY 格式\n");
      out.write("                                            date = new Date(parseInt(parts[2]), parseInt(parts[1]) - 1, parseInt(parts[0]));\n");
      out.write("                                            console.log(\"Parsed DD/MM/YYYY format:\", date);\n");
      out.write("                                        } else {\n");
      out.write("                                            // 假设是 MM/DD/YYYY 格式\n");
      out.write("                                            date = new Date(parseInt(parts[2]), parseInt(parts[0]) - 1, parseInt(parts[1]));\n");
      out.write("                                            console.log(\"Parsed MM/DD/YYYY format:\", date);\n");
      out.write("                                        }\n");
      out.write("                                    } else {\n");
      out.write("                                        date = new Date(dateStr);\n");
      out.write("                                    }\n");
      out.write("                                } else {\n");
      out.write("                                    // 尝试直接解析\n");
      out.write("                                    date = new Date(dateStr);\n");
      out.write("                                    console.log(\"Used default date parsing:\", date);\n");
      out.write("                                }\n");
      out.write("                            }\n");
      out.write("\n");
      out.write("                            // 检查日期是否有效\n");
      out.write("                            if (date && !isNaN(date.getTime())) {\n");
      out.write("                                // 返回 DD/MM/YYYY 格式\n");
      out.write("                                let result = String(date.getDate()).padStart(2, '0') + '/' +\n");
      out.write("                                    String(date.getMonth() + 1).padStart(2, '0') + '/' +\n");
      out.write("                                    date.getFullYear();\n");
      out.write("                                console.log(\"Formatted date result:\", result);\n");
      out.write("                                return result;\n");
      out.write("                            } else {\n");
      out.write("                                console.log(\"Invalid date object or NaN time\");\n");
      out.write("                            }\n");
      out.write("                        } catch (e) {\n");
      out.write("                            console.error(\"Error formatting date:\", e, \"for date:\", dateStr);\n");
      out.write("                        }\n");
      out.write("\n");
      out.write("                        // 如果无法解析，尝试直接使用原值\n");
      out.write("                        console.warn(\"Could not format date, returning original:\", dateStr);\n");
      out.write("                        return String(dateStr);\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    // 查看合同详情\n");
      out.write("                    function viewContract(contractId) {\n");
      out.write("                        window.location.href = 'contractDetail.jsp?contractId=' + contractId + '&mode=view';\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    // 重置搜索表单\n");
      out.write("                    function resetForm() {\n");
      out.write("                        document.getElementById('contractId').value = '';\n");
      out.write("                        document.getElementById('enterpriseName').value = '';\n");
      out.write("                        document.getElementById('contractStatus').value = '';\n");
      out.write("                        document.getElementById('contractType').value = '';\n");
      out.write("                        document.getElementById('resultsBody').innerHTML = '';\n");
      out.write("                        document.getElementById('noResults').style.display = 'none';\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    // 搜索合同函数\n");
      out.write("                    function searchContracts() {\n");
      out.write("                        const contractId = document.getElementById('contractId').value;\n");
      out.write("                        const enterpriseName = document.getElementById('enterpriseName').value;\n");
      out.write("                        const contractStatus = document.getElementById('contractStatus').value;\n");
      out.write("\n");
      out.write("                        console.log(\"Searching contracts with params - ID:\", contractId, \"Enterprise:\", enterpriseName,\n");
      out.write("                            \"Status:\", contractStatus);\n");
      out.write("\n");
      out.write("                        // Show loading indicator\n");
      out.write("                        document.getElementById('loading').style.display = 'block';\n");
      out.write("                        document.getElementById('noResults').style.display = 'none';\n");
      out.write("                        document.getElementById('resultsBody').innerHTML = '';\n");
      out.write("\n");
      out.write("                        // Perform AJAX call to search contracts\n");
      out.write("                        $.ajax({\n");
      out.write("                            url: \"searchContract\",\n");
      out.write("                            type: \"GET\",\n");
      out.write("                            data: {\n");
      out.write("                                contractId: contractId,\n");
      out.write("                                enterpriseName: enterpriseName,\n");
      out.write("                                contractStatus: contractStatus\n");
      out.write("                            },\n");
      out.write("                            dataType: \"json\",\n");
      out.write("                            success: function (contracts) {\n");
      out.write("                                document.getElementById('loading').style.display = 'none';\n");
      out.write("                                console.log(\"Received contracts data:\", contracts);\n");
      out.write("\n");
      out.write("                                if (!contracts || contracts.length === 0) {\n");
      out.write("                                    document.getElementById('noResults').style.display = 'block';\n");
      out.write("                                } else {\n");
      out.write("                                    let html = '';\n");
      out.write("\n");
      out.write("                                    contracts.forEach(function (contract) {\n");
      out.write("                                        console.log(\"Processing contract:\", contract);\n");
      out.write("\n");
      out.write("                                        // 输出日期原始值，以便调试\n");
      out.write("                                        console.log(\"Raw sign date:\", contract.signDate);\n");
      out.write("\n");
      out.write("                                        // 格式化日期\n");
      out.write("                                        let formattedDate = '';\n");
      out.write("                                        if (contract.signDate) {\n");
      out.write("                                            formattedDate = formatDateToDDMMYYYY(contract.signDate);\n");
      out.write("                                        } else if (contract.formattedSignDate) {\n");
      out.write("                                            // 尝试使用预格式化的日期\n");
      out.write("                                            formattedDate = contract.formattedSignDate;\n");
      out.write("                                        }\n");
      out.write("                                        console.log(\"Formatted date result:\", formattedDate);\n");
      out.write("\n");
      out.write("                                        // 格式化金额\n");
      out.write("                                        let formattedAmount = '$' + (contract.amount ? parseFloat(contract.amount).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '0.00');\n");
      out.write("\n");
      out.write("                                        // 构建表格行 - 与表头匹配\n");
      out.write("                                        html += '<tr onclick=\"viewContract(\\'' + contract.contractId + '\\')\">';\n");
      out.write("                                        html += '<td>' + (contract.contractId || '') + '</td>';\n");
      out.write("                                        html += '<td>' + (contract.contractName || '') + '</td>';\n");
      out.write("                                        html += '<td>' + formattedAmount + '</td>';\n");
      out.write("                                        html += '<td>' + formattedDate + '</td>';\n");
      out.write("                                        html += '<td>' + (contract.status || '') + '</td>';\n");
      out.write("                                        html += '</tr>';\n");
      out.write("                                    });\n");
      out.write("\n");
      out.write("                                    document.getElementById('resultsBody').innerHTML = html;\n");
      out.write("                                }\n");
      out.write("                            },\n");
      out.write("                            error: function (xhr, status, error) {\n");
      out.write("                                document.getElementById('loading').style.display = 'none';\n");
      out.write("                                console.error(\"AJAX Error:\", status, error);\n");
      out.write("                                console.error(\"Response Text:\", xhr.responseText);\n");
      out.write("\n");
      out.write("                                try {\n");
      out.write("                                    // Try to parse as JSON error message\n");
      out.write("                                    const errorData = JSON.parse(xhr.responseText);\n");
      out.write("                                    if (errorData && errorData.error) {\n");
      out.write("                                        alert(\"Error searching contracts: \" + errorData.error);\n");
      out.write("                                    } else {\n");
      out.write("                                        alert(\"Error searching contracts. See console for details.\");\n");
      out.write("                                    }\n");
      out.write("                                } catch (e) {\n");
      out.write("                                    alert(\"Error searching contracts. Server returned an invalid response.\");\n");
      out.write("                                }\n");
      out.write("\n");
      out.write("                                // Show error in the results area\n");
      out.write("                                document.getElementById('resultsBody').innerHTML = '<tr><td colspan=\"5\" class=\"text-danger\">Error occurred while searching. Please try again.</td></tr>';\n");
      out.write("                            }\n");
      out.write("                        });\n");
      out.write("                    }\n");
      out.write("                </script>\n");
      out.write("            </body>\n");
      out.write("\n");
      out.write("            </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
